<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Geek and Latin</title>
    <link>/</link>
    <description>Recent content on Geek and Latin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© sudarshan-reddy@github.io</copyright>
    <lastBuildDate>Sat, 14 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A little code generation in Go in 2020.</title>
      <link>/post/code-gen/</link>
      <pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/code-gen/</guid>
      <description>Perl gives me headaches. But I&amp;rsquo;m fond of one of Larry Wall&amp;rsquo;s three virtues: Laziness. This is a story of how sometimes laziness lets you do fun things.
Distributed systems and microservices are as ubiquitous as the coronavirus in 2020. This results in a requirement for a lot of integration. And a nice way to maintain the glue code is to use SDKs rather than have multiple services write the transport glue themselves.</description>
    </item>
    
    <item>
      <title>How I got a 100 Dollar toy drone to follow me around.</title>
      <link>/post/drone-follow-face/</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/drone-follow-face/</guid>
      <description>It&amp;rsquo;s that time of the year again when I decide to add to my blog. It was my birthday last week and I decided to buy myself a small DJI drone to hack with. I wanted to get something lightweight, cheap and easily replaced. The DJI Tello so far has turned out to be delightfully sufficient for my criteria.
The experiment I set out to do is to have the Tello latch on to a face and follow it.</description>
    </item>
    
    <item>
      <title>Why types are elegant</title>
      <link>/post/static-typing-is-beautiful/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/static-typing-is-beautiful/</guid>
      <description>I&amp;rsquo;ve been working with Go(for work) and Rust(for fun) lately. I got pulled into the two languages for different reasons (easy concurrency and memory safety respectively) and ended up staying for a totally different reason altogether. Their type systems.
Composition instead of inheritance feels elegant, right and very readable. I&amp;rsquo;m going to talk about something that happened today when I was very thankful for composition and typing itself.
A colleague and I ran into a problem that quickly devolved into an argument and as it is with professional software engineers, wanton namecalling.</description>
    </item>
    
    <item>
      <title>Training a simple gender classifier with Python and Predicting with Go</title>
      <link>/post/keras-to-go/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/keras-to-go/</guid>
      <description>Ever since Tensorflow released Bindings for Go, I&amp;rsquo;ve been itching to give it a go. The ease of deployability with Go and microservice friendliness and even simple http performance improvements make it really handly to build a working prediction application with Go.
The immediate and apparent downside for anyone who&amp;rsquo;s tried to train a model is how unintuitive scoping is with Tensorflow for Go.Python&amp;rsquo;s a lot easier to train models with for a newcomer because of a lot of things:</description>
    </item>
    
    <item>
      <title>Env variables</title>
      <link>/post/env-variables/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/env-variables/</guid>
      <description>Ever wake up on the symmetrical side of the bed? Like at the middle? Yep. That�s when you decide that you are never going to (ever) code in constants in your application. So how do you get them? Configuration files? JSONs? Yamls? Environment variables are more elegant and easier with a docker-compose no?
12 factor apps are what cool kids are doing these days (read three years ago). And it makes sense that you put your configurable variables into the environment and do a getenv.</description>
    </item>
    
  </channel>
</rss>